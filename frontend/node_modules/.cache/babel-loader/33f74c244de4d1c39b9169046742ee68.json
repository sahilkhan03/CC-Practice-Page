{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sahil/Documents/cc_project/frontend/src/Components/Problems.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass Problems extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"problems\": []\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.selectedTags.length !== 0) {\n      let list = \"\";\n      this.props.selectedTags.map(tag => list += tag.id + \",\");\n      list = list.slice(0, -1);\n      console.log(list);\n      fetch('/api/tags/' + list).then(data => data.json()).then(res => {\n        console.log(res);\n        this.setState({\n          \"problems\": res\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props;\n  }\n\n  render() {\n    if (this.props.selectedTags.length === 0) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.problems.map(item => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.codechef.com/problems/\" + item.problemCode,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: [\" \", item.problemName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Problems;","map":{"version":3,"sources":["/home/sahil/Documents/cc_project/frontend/src/Components/Problems.js"],"names":["React","Component","Redirect","Problems","constructor","props","state","componentDidMount","selectedTags","length","list","map","tag","id","slice","console","log","fetch","then","data","json","res","setState","componentWillUnmount","render","problems","item","problemCode","problemName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AACA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT,kBAAY;AADH,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKF,KAAL,CAAWG,YAAX,CAAwBC,MAAxB,KAAmC,CAAvC,EAA0C;AACtC,UAAIC,IAAI,GAAG,EAAX;AACA,WAAKL,KAAL,CAAWG,YAAX,CAAwBG,GAAxB,CAA4BC,GAAG,IAC3BF,IAAI,IAAIE,GAAG,CAACC,EAAJ,GAAS,GADrB;AAGAH,MAAAA,IAAI,GAAGA,IAAI,CAACI,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAO,MAAAA,KAAK,CAAC,eAAeP,IAAhB,CAAL,CACKQ,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEWG,GAAD,IAAS;AACXN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACA,aAAKC,QAAL,CAAc;AAAE,sBAAYD;AAAd,SAAd;AACH,OALL;AAMH;AACJ;;AAEDE,EAAAA,oBAAoB,GAAG;AACnB,SAAKlB,KAAL;AACH;;AAEDmB,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKnB,KAAL,CAAWG,YAAX,CAAwBC,MAAxB,KAAmC,CAAvC,EACI,oBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACJ,wBACI;AAAA,gBAEQ,KAAKH,KAAL,CAAWmB,QAAX,CAAoBd,GAApB,CAAwBe,IAAI,iBACxB;AAAG,QAAA,IAAI,EAAE,uCAAuCA,IAAI,CAACC,WAArD;AAAkE,QAAA,MAAM,EAAC,QAAzE;AAAkF,QAAA,GAAG,EAAC,qBAAtF;AAAA,wBAA8GD,IAAI,CAACE,WAAnH;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAxC4B;;AA0CjC,eAAezB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nclass Problems extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"problems\": []\n        }\n    }\n    componentDidMount() {\n        if (this.props.selectedTags.length !== 0) {\n            let list = \"\"\n            this.props.selectedTags.map(tag => (\n                list += tag.id + \",\"\n            ))\n            list = list.slice(0, -1);\n            console.log(list)\n            fetch('/api/tags/' + list)\n                .then(data => data.json())\n                .then((res) => {\n                    console.log(res);\n                    this.setState({ \"problems\": res })\n                })\n        }\n    }\n\n    componentWillUnmount() {\n        this.props\n    }\n\n    render() {\n        if (this.props.selectedTags.length === 0)\n            return <Redirect to=\"/\" ></Redirect>\n        return (\n            <div>\n                {\n                    this.state.problems.map(item => (\n                        <a href={\"https://www.codechef.com/problems/\" + item.problemCode} target=\"_blank\" rel=\"noopener noreferrer\"> {item.problemName} </a>\n                    ))\n                }\n            </div>\n        )\n    }\n}\nexport default Problems;"]},"metadata":{},"sourceType":"module"}